{"version":3,"file":"static/js/807.5cd7341c.chunk.js","mappings":"0NAOA,MAyFA,EAzFiBA,KACf,MAAOC,EAAQC,IAAaC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,KAAMC,KAAM,GAAGC,EAAAA,sBACtDC,GAAYC,EAAAA,EAAAA,WACZ,KAAEC,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,IACtB,MAAEC,IAAUF,EAAAA,EAAAA,YAAWG,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,MAgEjB,OAJAC,EAAAA,EAAAA,YAAU,KACJP,GAAMK,EAAS,IAAI,GACtB,CAACL,KAGFQ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,4EAA2EC,SAAA,EACxFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,WAAUC,SAAC,mBACzBC,EAAAA,EAAAA,KAAA,SAAOC,IAAKd,EAAWe,KAAK,OAAOC,SAjElBC,KACnB,IAAKjB,EAAUkB,QAAQC,MAAO,OAC9B,MAAMC,EAAYpB,EAAUkB,QAAQG,MAAM,GAEpCC,EAAa,IAAIC,WACvBD,EAAWE,OAASC,IAClB9B,EAAU,CAAEE,KAAMuB,EAAWtB,KAAM2B,EAAEC,OAAOC,QAAS,EAGvDL,EAAWM,cAAcR,EAAU,EAwD0BS,QAAM,KACjEhB,EAAAA,EAAAA,KAAA,OAAKiB,IAAKpC,EAAOI,KAAMiC,IAAI,GAAGpB,UAAU,wCAAwCqB,QAASA,IAAMhC,EAAUkB,QAAQe,WACjHvB,EAAAA,EAAAA,MAAA,QAAMwB,SAvDaT,IACrBA,EAAEU,iBACF,MAAMC,EAAOX,EAAEC,OAAO,GAAGP,MAAMkB,OACzBC,EAAQb,EAAEC,OAAO,GAAGP,MAAMkB,OAC1BE,EAAWd,EAAEC,OAAO,GAAGP,MACvBqB,EAAUf,EAAEC,OAAO,GAAGP,MAC5B,IAAKiB,EAIH,OAHAK,EAAAA,GAAaC,QAAQ,CAAEC,QAAS,qBAChClB,EAAEC,OAAO,GAAGP,MAAQ,QACpBM,EAAEC,OAAO,GAAGkB,QAEZ,IAAKN,EAIL,OAHAG,EAAAA,GAAaC,QAAQ,CAAEC,QAAS,sBAChClB,EAAEC,OAAO,GAAGP,MAAQ,QACpBM,EAAEC,OAAO,GAAGkB,QAEZ,IAAKL,EAGL,OAFAE,EAAAA,GAAaC,QAAQ,CAAEC,QAAS,8BAChClB,EAAEC,OAAO,GAAGkB,QAEZ,IAAKJ,EAGL,OAFAC,EAAAA,GAAaC,QAAQ,CAAEC,QAAS,gCAChClB,EAAEC,OAAO,GAAGkB,QAEZ,GAAIL,IAAaC,EAGjB,OAFAC,EAAAA,GAAaC,QAAQ,CAAEC,QAAS,+BAChClB,EAAEC,OAAO,GAAGkB,QAGd,MAAMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUrD,EAAOG,MACjCgD,EAASE,OAAO,OAAQX,GACxBS,EAASE,OAAO,QAAST,GACzBO,EAASE,OAAO,WAAYR,GAC5BM,EAASE,OAAO,UAAWP,GAE3BnC,EAAM,CACJ2C,OAAQ,OACRC,IAAKC,EAAAA,GAAQhD,KAAKiD,SAClBC,KAAMP,IAELQ,MAAK1B,IACJpB,EAAS,SAAS,GAClB,EAY8BI,UAAU,+EAA8EC,SAAA,EACtHC,EAAAA,EAAAA,KAAA,SAAOE,KAAM,OAAQJ,UAAU,0BAA0B2C,YAAY,UACrEzC,EAAAA,EAAAA,KAAA,SAAOE,KAAM,OAAQJ,UAAU,0BAA0B2C,YAAY,WACrEzC,EAAAA,EAAAA,KAAA,SAAOE,KAAM,WAAYJ,UAAU,0BAA0B2C,YAAY,cACzEzC,EAAAA,EAAAA,KAAA,SAAOE,KAAM,WAAYJ,UAAU,0BAA0B2C,YAAY,aACzE5C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kDAAiDC,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,QAAAD,SAAO,+BACPC,EAAAA,EAAAA,KAAC0C,EAAAA,GAAI,CAACC,GAAI,SAAU7C,UAAU,sBAAqBC,SAAC,oBAEtDC,EAAAA,EAAAA,KAAA,UAAQE,KAAK,SAASJ,UAAU,6BAA4BC,SAAC,kBAE3D,C","sources":["pages/Auth/Register.jsx"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { notification } from 'antd';\r\nimport { AuthContext } from '../../providers/AuthProvider';\r\nimport { AxiosContext } from '../../providers/AxiosProvider';\r\nimport { API_URL, SERVER_URL } from '../../configs';\r\n\r\nconst Register = () => {\r\n  const [avatar, setAvatar] = useState({ file: null, path: `${SERVER_URL}/avatar/default` });\r\n  const avatarRef = useRef();\r\n  const { auth } = useContext(AuthContext);\r\n  const { axios } = useContext(AxiosContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleAvatar = () => {\r\n    if (!avatarRef.current.value) return;\r\n    const avatarImg = avatarRef.current.files[0];\r\n\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = e => {\r\n      setAvatar({ file: avatarImg, path: e.target.result });\r\n    }\r\n\r\n    fileReader.readAsDataURL(avatarImg);\r\n  }\r\n\r\n  const handleRegister = e => {\r\n    e.preventDefault();\r\n    const name = e.target[0].value.trim();\r\n    const email = e.target[1].value.trim();\r\n    const password = e.target[2].value;\r\n    const confirm = e.target[3].value;\r\n    if (!name) {\r\n      notification.warning({ message: 'Input your Name!' });\r\n      e.target[0].value = '';\r\n      e.target[0].focus();\r\n      return;\r\n    } if (!email) {\r\n      notification.warning({ message: 'Input your Email!' });\r\n      e.target[1].value = '';\r\n      e.target[1].focus();\r\n      return;\r\n    } if (!password) {\r\n      notification.warning({ message: 'Input your Password!' });\r\n      e.target[2].focus();\r\n      return;\r\n    } if (!confirm) {\r\n      notification.warning({ message: 'Confirm your Password!' });\r\n      e.target[3].focus();\r\n      return;\r\n    } if (password !== confirm) {\r\n      notification.warning({ message: 'Confirm is incorrect!' });\r\n      e.target[3].focus();\r\n      return;\r\n    }\r\n    const formData = new FormData();\r\n    formData.append('avatar', avatar.file);\r\n    formData.append('name', name);\r\n    formData.append('email', email);\r\n    formData.append('password', password);\r\n    formData.append('confirm', confirm);\r\n\r\n    axios({\r\n      method: 'POST',\r\n      url: API_URL.auth.register,\r\n      data: formData\r\n    })\r\n      .then(result => {\r\n        navigate('/login');\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (auth) navigate('/')\r\n  }, [auth])\r\n\r\n  return (\r\n    <div className='container w-full h-screen flex flex-col gap-4 justify-center items-center'>\r\n      <h1 className='text-5xl'>User Register</h1>\r\n      <input ref={avatarRef} type='file' onChange={handleAvatar} hidden />\r\n      <img src={avatar.path} alt=\"\" className='w-[200px] rounded-full cursor-pointer' onClick={() => avatarRef.current.click()} />\r\n      <form onSubmit={handleRegister} className='flex flex-col gap-4 lg:w-1/3 md:w-1/2 sm:w-[70%] mt-8 w-[90%] transition-all'>\r\n        <input type={'text'} className='border p-2 outline-none' placeholder='Name' />\r\n        <input type={'text'} className='border p-2 outline-none' placeholder='Email' />\r\n        <input type={'password'} className='border p-2 outline-none' placeholder='Password' />\r\n        <input type={'password'} className='border p-2 outline-none' placeholder='Confirm' />\r\n        <div className='flex flex-col gap-4 justify-between sm:flex-row'>\r\n          <span>{'If you have your account?'}</span>\r\n          <Link to={'/login'} className='hover:text-blue-700'>Go Login...</Link>\r\n        </div>\r\n        <button type='submit' className='bg-blue-600 text-white p-2'>Register</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register"],"names":["Register","avatar","setAvatar","useState","file","path","SERVER_URL","avatarRef","useRef","auth","useContext","AuthContext","axios","AxiosContext","navigate","useNavigate","useEffect","_jsxs","className","children","_jsx","ref","type","onChange","handleAvatar","current","value","avatarImg","files","fileReader","FileReader","onload","e","target","result","readAsDataURL","hidden","src","alt","onClick","click","onSubmit","preventDefault","name","trim","email","password","confirm","notification","warning","message","focus","formData","FormData","append","method","url","API_URL","register","data","then","placeholder","Link","to"],"sourceRoot":""}